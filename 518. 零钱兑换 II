# dp
动态规划
class Solution {
    // 动态规划
    // dp[i] 表示当总金额为 i 时，有多少种银币组合方法
    // 遍历 coins 种的元素，也就是银币的面额，来判断从 coins[i] 到 amount 时有多少组合
    public int change(int amount, int[] coins) {
        int[] dp = new int[amount + 1];
        dp[0] = 1;
        for (int i = 0; i < coins.length; i++) {
            for (int j = coins[i]; j <= amount; j++) {
                dp[j] += dp[j - coins[i]];
            }
        }
        return dp[amount];
    }
}
