class Solution {
    // 暴力解法
    // 在每个长度大于等于 2 的连续子数组中判断，当前子数组和是否为 k 的整数倍
    public boolean checkSubarraySum(int[] nums, int k) {
        for (int i = 0; i < nums.length - 1; i++) {
            for (int j = i + 1; j < nums.length; j++) {
                int sum = 0;
                for (int start = i; start <= j; start++) {
                    sum += nums[start];
                }
                if (sum == k || (k != 0 && sum % k == 0)) {
                    return true;
                }
            }
        }
        return false;
    }
}
