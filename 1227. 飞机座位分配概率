class Solution {
    // 动态规划
    // 根据题目规律找出递推公式
    // dp[1] = 1, dp[2] = 0.5
    // dp[3] 分为两种情况之和，第一种情况：当第一个人坐在了第二个人的位置上
    // 并且第二个人坐在了第一个人的位置上时
    // 第二种情况：当第一个人坐在自己的位置上
    // 所以 dp[3] = (1/3 * 1/2) + 1 * 3 也就是
    // dp[i] = 1 / i * (dp[1] + dp[2] + .... d[i - 1]); 
    public double nthPersonGetsNthSeat(int n) {
        if (n == 1) {
            return 1;
        }
        if (n == 2) {
            return 0.5;
        }
        double[] dp = new double[n + 1];
        dp[1] = 1;
        dp[2] = 0.5;
        double sum = dp[1] + dp[2];
        for (int i = 3; i <= n; i++) {
            dp[i] = (1 / (double)i) * sum;
            sum += dp[i];
        }
        return dp[n];
    }
}
